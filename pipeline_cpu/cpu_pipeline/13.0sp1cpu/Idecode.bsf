/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/
(header "symbol" (version "1.1"))
(symbol
	(rect 16 16 272 192)
	(text "Idecode" (rect 5 0 35 12)(font "Arial" ))
	(text "inst" (rect 8 160 20 172)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "RegWrite" (rect 0 0 40 12)(font "Arial" ))
		(text "RegWrite" (rect 21 27 61 39)(font "Arial" ))
		(line (pt 0 32)(pt 16 32)(line_width 1))
	)
	(port
		(pt 0 48)
		(input)
		(text "RegDst" (rect 0 0 31 12)(font "Arial" ))
		(text "RegDst" (rect 21 43 52 55)(font "Arial" ))
		(line (pt 0 48)(pt 16 48)(line_width 1))
	)
	(port
		(pt 0 64)
		(input)
		(text "ALU_Result[7..0]" (rect 0 0 73 12)(font "Arial" ))
		(text "ALU_Result[7..0]" (rect 21 59 94 71)(font "Arial" ))
		(line (pt 0 64)(pt 16 64)(line_width 3))
	)
	(port
		(pt 0 80)
		(input)
		(text "MemtoReg" (rect 0 0 46 12)(font "Arial" ))
		(text "MemtoReg" (rect 21 75 67 87)(font "Arial" ))
		(line (pt 0 80)(pt 16 80)(line_width 1))
	)
	(port
		(pt 0 96)
		(input)
		(text "Read_data[7..0]" (rect 0 0 64 12)(font "Arial" ))
		(text "Read_data[7..0]" (rect 21 91 85 103)(font "Arial" ))
		(line (pt 0 96)(pt 16 96)(line_width 3))
	)
	(port
		(pt 0 112)
		(input)
		(text "Instruction[31..0]" (rect 0 0 63 12)(font "Arial" ))
		(text "Instruction[31..0]" (rect 21 107 84 119)(font "Arial" ))
		(line (pt 0 112)(pt 16 112)(line_width 3))
	)
	(port
		(pt 0 128)
		(input)
		(text "Clock" (rect 0 0 22 12)(font "Arial" ))
		(text "Clock" (rect 21 123 43 135)(font "Arial" ))
		(line (pt 0 128)(pt 16 128)(line_width 1))
	)
	(port
		(pt 0 144)
		(input)
		(text "Reset" (rect 0 0 24 12)(font "Arial" ))
		(text "Reset" (rect 21 139 45 151)(font "Arial" ))
		(line (pt 0 144)(pt 16 144)(line_width 1))
	)
	(port
		(pt 256 32)
		(output)
		(text "Read_Data_1[7..0]" (rect 0 0 76 12)(font "Arial" ))
		(text "Read_Data_1[7..0]" (rect 159 27 235 39)(font "Arial" ))
		(line (pt 256 32)(pt 240 32)(line_width 3))
	)
	(port
		(pt 256 48)
		(output)
		(text "Read_Data_2[7..0]" (rect 0 0 77 12)(font "Arial" ))
		(text "Read_Data_2[7..0]" (rect 158 43 235 55)(font "Arial" ))
		(line (pt 256 48)(pt 240 48)(line_width 3))
	)
	(port
		(pt 256 64)
		(output)
		(text "Write_Reg[4..0]" (rect 0 0 67 12)(font "Arial" ))
		(text "Write_Reg[4..0]" (rect 168 59 235 71)(font "Arial" ))
		(line (pt 256 64)(pt 240 64)(line_width 3))
	)
	(port
		(pt 256 80)
		(output)
		(text "Sign_Extend[7..0]" (rect 0 0 70 12)(font "Arial" ))
		(text "Sign_Extend[7..0]" (rect 165 75 235 87)(font "Arial" ))
		(line (pt 256 80)(pt 240 80)(line_width 3))
	)
	(port
		(pt 256 96)
		(output)
		(text "Jump_Instr[7..0]" (rect 0 0 66 12)(font "Arial" ))
		(text "Jump_Instr[7..0]" (rect 169 91 235 103)(font "Arial" ))
		(line (pt 256 96)(pt 240 96)(line_width 3))
	)
	(drawing
		(rectangle (rect 16 16 240 160)(line_width 1))
	)
)
