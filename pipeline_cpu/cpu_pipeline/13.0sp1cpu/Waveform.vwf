/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("Branch_NE_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Branch_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Instruction_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Instruction_out[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Instruction_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Instruction_out";
}

SIGNAL("Mem_Address_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Mem_Address_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Mem_Address_out";
}

SIGNAL("Mem_Address_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Mem_Address_out";
}

SIGNAL("Mem_Address_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Mem_Address_out";
}

SIGNAL("Mem_Address_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Mem_Address_out";
}

SIGNAL("Mem_Address_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Mem_Address_out";
}

SIGNAL("Mem_Address_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Mem_Address_out";
}

SIGNAL("Mem_Address_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Mem_Address_out";
}

SIGNAL("Mem_Address_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Mem_Address_out";
}

SIGNAL("MemRead_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MemReadData_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MemReadData_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemReadData_out";
}

SIGNAL("MemReadData_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemReadData_out";
}

SIGNAL("MemReadData_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemReadData_out";
}

SIGNAL("MemReadData_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemReadData_out";
}

SIGNAL("MemReadData_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemReadData_out";
}

SIGNAL("MemReadData_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemReadData_out";
}

SIGNAL("MemReadData_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemReadData_out";
}

SIGNAL("MemReadData_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemReadData_out";
}

SIGNAL("MemWrite_Data_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MemWrite_Data_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemWrite_Data_out";
}

SIGNAL("MemWrite_Data_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemWrite_Data_out";
}

SIGNAL("MemWrite_Data_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemWrite_Data_out";
}

SIGNAL("MemWrite_Data_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemWrite_Data_out";
}

SIGNAL("MemWrite_Data_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemWrite_Data_out";
}

SIGNAL("MemWrite_Data_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemWrite_Data_out";
}

SIGNAL("MemWrite_Data_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemWrite_Data_out";
}

SIGNAL("MemWrite_Data_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemWrite_Data_out";
}

SIGNAL("MemWrite_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("Read_Data1_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Read_Data1_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Read_Data1_out";
}

SIGNAL("Read_Data1_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Read_Data1_out";
}

SIGNAL("Read_Data1_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Read_Data1_out";
}

SIGNAL("Read_Data1_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Read_Data1_out";
}

SIGNAL("Read_Data1_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Read_Data1_out";
}

SIGNAL("Read_Data1_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Read_Data1_out";
}

SIGNAL("Read_Data1_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Read_Data1_out";
}

SIGNAL("Read_Data1_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Read_Data1_out";
}

SIGNAL("Read_Data2_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Read_Data2_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Read_Data2_out";
}

SIGNAL("Read_Data2_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Read_Data2_out";
}

SIGNAL("Read_Data2_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Read_Data2_out";
}

SIGNAL("Read_Data2_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Read_Data2_out";
}

SIGNAL("Read_Data2_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Read_Data2_out";
}

SIGNAL("Read_Data2_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Read_Data2_out";
}

SIGNAL("Read_Data2_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Read_Data2_out";
}

SIGNAL("Read_Data2_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Read_Data2_out";
}

SIGNAL("RegWrite_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RegWriteData_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RegWriteData_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RegWriteData_out";
}

SIGNAL("RegWriteData_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RegWriteData_out";
}

SIGNAL("RegWriteData_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RegWriteData_out";
}

SIGNAL("RegWriteData_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RegWriteData_out";
}

SIGNAL("RegWriteData_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RegWriteData_out";
}

SIGNAL("RegWriteData_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RegWriteData_out";
}

SIGNAL("RegWriteData_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RegWriteData_out";
}

SIGNAL("RegWriteData_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RegWriteData_out";
}

SIGNAL("Reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("STALL_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WriteRegister_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WriteRegister_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WriteRegister_out";
}

SIGNAL("WriteRegister_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WriteRegister_out";
}

SIGNAL("WriteRegister_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WriteRegister_out";
}

SIGNAL("WriteRegister_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WriteRegister_out";
}

SIGNAL("WriteRegister_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WriteRegister_out";
}

SIGNAL("Zero_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ForwardA_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ForwardA_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ForwardA_out";
}

SIGNAL("ForwardA_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ForwardA_out";
}

SIGNAL("ForwardB_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ForwardB_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ForwardB_out";
}

SIGNAL("ForwardB_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ForwardB_out";
}

SIGNAL("ALU_Result_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ALU_Result_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Result_out";
}

SIGNAL("ALU_Result_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Result_out";
}

SIGNAL("ALU_Result_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Result_out";
}

SIGNAL("ALU_Result_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Result_out";
}

SIGNAL("ALU_Result_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Result_out";
}

SIGNAL("ALU_Result_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Result_out";
}

SIGNAL("ALU_Result_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Result_out";
}

SIGNAL("ALU_Result_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Result_out";
}

GROUP("1")
{
	MEMBERS = "Clock", "Reset", "PC", "Instruction_out";
}

GROUP("Mem")
{
	MEMBERS = "Mem_Address_out", "MemRead_out", "MemWrite_Data_out", "MemWrite_out", "MemReadData_out";
}

GROUP("Reg")
{
	MEMBERS = "RegWrite_out", "RegWriteData_out", "WriteRegister_out";
}

GROUP("Control")
{
	MEMBERS = "STALL_out", "Branch_out", "Branch_NE_out", "Zero_out";
}

SIGNAL("ALU_Input_1_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ALU_Input_1_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Input_1_out";
}

SIGNAL("ALU_Input_1_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Input_1_out";
}

SIGNAL("ALU_Input_1_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Input_1_out";
}

SIGNAL("ALU_Input_1_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Input_1_out";
}

SIGNAL("ALU_Input_1_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Input_1_out";
}

SIGNAL("ALU_Input_1_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Input_1_out";
}

SIGNAL("ALU_Input_1_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Input_1_out";
}

SIGNAL("ALU_Input_1_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Input_1_out";
}

SIGNAL("ALU_Input_2_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ALU_Input_2_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Input_2_out";
}

SIGNAL("ALU_Input_2_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Input_2_out";
}

SIGNAL("ALU_Input_2_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Input_2_out";
}

SIGNAL("ALU_Input_2_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Input_2_out";
}

SIGNAL("ALU_Input_2_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Input_2_out";
}

SIGNAL("ALU_Input_2_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Input_2_out";
}

SIGNAL("ALU_Input_2_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Input_2_out";
}

SIGNAL("ALU_Input_2_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_Input_2_out";
}

TRANSITION_LIST("Branch_NE_out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Branch_out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
	}
}

TRANSITION_LIST("Instruction_out[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Instruction_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Mem_Address_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Mem_Address_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Mem_Address_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Mem_Address_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Mem_Address_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Mem_Address_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Mem_Address_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Mem_Address_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("MemRead_out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("MemReadData_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("MemReadData_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("MemReadData_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("MemReadData_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("MemReadData_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("MemReadData_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("MemReadData_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("MemReadData_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("MemWrite_Data_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("MemWrite_Data_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("MemWrite_Data_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("MemWrite_Data_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("MemWrite_Data_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("MemWrite_Data_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("MemWrite_Data_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("MemWrite_Data_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("MemWrite_out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("PC[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("PC[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("PC[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("PC[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("PC[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("PC[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("PC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("PC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Read_Data1_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Read_Data1_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Read_Data1_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Read_Data1_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Read_Data1_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Read_Data1_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Read_Data1_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Read_Data1_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Read_Data2_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Read_Data2_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Read_Data2_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Read_Data2_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Read_Data2_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Read_Data2_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Read_Data2_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Read_Data2_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("RegWrite_out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("RegWriteData_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("RegWriteData_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("RegWriteData_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("RegWriteData_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("RegWriteData_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("RegWriteData_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("RegWriteData_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("RegWriteData_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1800.0;
	}
}

TRANSITION_LIST("STALL_out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("WriteRegister_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("WriteRegister_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("WriteRegister_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("WriteRegister_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("WriteRegister_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("Zero_out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ForwardA_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ForwardA_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ForwardB_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ForwardB_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Result_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Result_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Result_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Result_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Result_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Result_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Result_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Result_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Input_1_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Input_1_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Input_1_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Input_1_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Input_1_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Input_1_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Input_1_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Input_1_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Input_2_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Input_2_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Input_2_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Input_2_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Input_2_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Input_2_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Input_2_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("ALU_Input_2_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "1";
	EXPAND_STATUS = EXPANDED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 12;
}

DISPLAY_LINE
{
	CHANNEL = "Clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "PC[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 2;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 2;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 2;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 2;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 2;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 2;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 2;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 2;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 0;
	CHILDREN = 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Instruction_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 2;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Read_Data1_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
	CHILDREN = 46, 47, 48, 49, 50, 51, 52, 53;
}

DISPLAY_LINE
{
	CHANNEL = "Read_Data1_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Read_Data1_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Read_Data1_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Read_Data1_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Read_Data1_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Read_Data1_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Read_Data1_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Read_Data1_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Read_Data2_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 0;
	CHILDREN = 55, 56, 57, 58, 59, 60, 61, 62;
}

DISPLAY_LINE
{
	CHANNEL = "Read_Data2_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Read_Data2_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Read_Data2_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Read_Data2_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Read_Data2_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Read_Data2_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Read_Data2_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Read_Data2_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Control";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 0;
	CHILDREN = 64, 65, 66, 67;
}

DISPLAY_LINE
{
	CHANNEL = "STALL_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "Branch_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "Branch_NE_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "Zero_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "Mem";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 0;
	CHILDREN = 69, 78, 79, 88, 89;
}

DISPLAY_LINE
{
	CHANNEL = "Mem_Address_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 68;
	CHILDREN = 70, 71, 72, 73, 74, 75, 76, 77;
}

DISPLAY_LINE
{
	CHANNEL = "Mem_Address_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 2;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "Mem_Address_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 2;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "Mem_Address_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 2;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "Mem_Address_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 2;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "Mem_Address_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 2;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "Mem_Address_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 2;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "Mem_Address_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 2;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "Mem_Address_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 2;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "MemRead_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "MemWrite_Data_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 68;
	CHILDREN = 80, 81, 82, 83, 84, 85, 86, 87;
}

DISPLAY_LINE
{
	CHANNEL = "MemWrite_Data_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 2;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "MemWrite_Data_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 2;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "MemWrite_Data_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 2;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "MemWrite_Data_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 2;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "MemWrite_Data_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 2;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "MemWrite_Data_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 2;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "MemWrite_Data_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 2;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "MemWrite_Data_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 2;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "MemWrite_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "MemReadData_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 68;
	CHILDREN = 90, 91, 92, 93, 94, 95, 96, 97;
}

DISPLAY_LINE
{
	CHANNEL = "MemReadData_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 2;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "MemReadData_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 2;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "MemReadData_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 2;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "MemReadData_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 2;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "MemReadData_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 2;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "MemReadData_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 2;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "MemReadData_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 2;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "MemReadData_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 2;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "Reg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 0;
	CHILDREN = 99, 100, 109;
}

DISPLAY_LINE
{
	CHANNEL = "RegWrite_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 98;
}

DISPLAY_LINE
{
	CHANNEL = "RegWriteData_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 98;
	CHILDREN = 101, 102, 103, 104, 105, 106, 107, 108;
}

DISPLAY_LINE
{
	CHANNEL = "RegWriteData_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 2;
	PARENT = 100;
}

DISPLAY_LINE
{
	CHANNEL = "RegWriteData_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 2;
	PARENT = 100;
}

DISPLAY_LINE
{
	CHANNEL = "RegWriteData_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 2;
	PARENT = 100;
}

DISPLAY_LINE
{
	CHANNEL = "RegWriteData_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 2;
	PARENT = 100;
}

DISPLAY_LINE
{
	CHANNEL = "RegWriteData_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 2;
	PARENT = 100;
}

DISPLAY_LINE
{
	CHANNEL = "RegWriteData_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 2;
	PARENT = 100;
}

DISPLAY_LINE
{
	CHANNEL = "RegWriteData_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 2;
	PARENT = 100;
}

DISPLAY_LINE
{
	CHANNEL = "RegWriteData_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 2;
	PARENT = 100;
}

DISPLAY_LINE
{
	CHANNEL = "WriteRegister_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 98;
	CHILDREN = 110, 111, 112, 113, 114;
}

DISPLAY_LINE
{
	CHANNEL = "WriteRegister_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 2;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "WriteRegister_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 2;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "WriteRegister_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 2;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "WriteRegister_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 2;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "WriteRegister_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 2;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "ForwardA_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 115;
	TREE_LEVEL = 0;
	CHILDREN = 116, 117;
}

DISPLAY_LINE
{
	CHANNEL = "ForwardA_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "ForwardA_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "ForwardB_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 118;
	TREE_LEVEL = 0;
	CHILDREN = 119, 120;
}

DISPLAY_LINE
{
	CHANNEL = "ForwardB_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 118;
}

DISPLAY_LINE
{
	CHANNEL = "ForwardB_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 118;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Result_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 121;
	TREE_LEVEL = 0;
	CHILDREN = 122, 123, 124, 125, 126, 127, 128, 129;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Result_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 121;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Result_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 121;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Result_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 121;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Result_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 121;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Result_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 121;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Result_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 121;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Result_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 121;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Result_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 121;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Input_1_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 130;
	TREE_LEVEL = 0;
	CHILDREN = 131, 132, 133, 134, 135, 136, 137, 138;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Input_1_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 130;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Input_1_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 130;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Input_1_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 130;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Input_1_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 134;
	TREE_LEVEL = 1;
	PARENT = 130;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Input_1_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 130;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Input_1_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 136;
	TREE_LEVEL = 1;
	PARENT = 130;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Input_1_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 137;
	TREE_LEVEL = 1;
	PARENT = 130;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Input_1_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 130;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Input_2_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 139;
	TREE_LEVEL = 0;
	CHILDREN = 140, 141, 142, 143, 144, 145, 146, 147;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Input_2_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 140;
	TREE_LEVEL = 1;
	PARENT = 139;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Input_2_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 141;
	TREE_LEVEL = 1;
	PARENT = 139;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Input_2_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 142;
	TREE_LEVEL = 1;
	PARENT = 139;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Input_2_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 143;
	TREE_LEVEL = 1;
	PARENT = 139;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Input_2_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 144;
	TREE_LEVEL = 1;
	PARENT = 139;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Input_2_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 145;
	TREE_LEVEL = 1;
	PARENT = 139;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Input_2_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 146;
	TREE_LEVEL = 1;
	PARENT = 139;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_Input_2_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 147;
	TREE_LEVEL = 1;
	PARENT = 139;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
